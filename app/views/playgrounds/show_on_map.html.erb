
<html>
<head>
<meta name="viewport" content="initial-scale=1.0, user-scalable=no" />
<%= stylesheet_link_tag "gmaps4rails" %>
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/css/bootstrap.min.css" integrity="sha512-dTfge/zgoMYpP7QbHy4gWMEGsbsdZeCXz7irItjcC3sPUFtf0kuFbDz/ixG7ArTxmDjLXDmezHubeNikyKGVyQ==" crossorigin="anonymous">
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/js/bootstrap.min.js" integrity="sha512-K1qjQ+NcF2TYO/eI3M6v8EiNYZfA95pQumfvcVrTHtwQVDG+aHRqLi/ETn2uB+1JqwYqVG3LIvdm9lj6imS/pQ==" crossorigin="anonymous"></script>
<link href="https://maxcdn.bootstrapcdn.com/font-awesome/4.4.0/css/font-awesome.min.css" rel="stylesheet" />
<script type="text/javascript" src="http://maps.google.com/maps/api/js?sensor=false"></script>
<script type="text/javascript">
var geocoder = new google.maps.Geocoder();

function geocodePosition(pos) {
   
  geocoder.geocode({
    latLng: pos
  }, function(responses) {
    if (responses && responses.length > 0) {
      updateMarkerAddress(responses[0].formatted_address);
    } else {
      updateMarkerAddress('Cannot determine address at this location.');
    }
  });
}

function updateMarkerStatus(str) {
  document.getElementById('markerStatus').innerHTML = str;
}

function updateMarkerPosition(latLng) {
  document.getElementById('info').innerHTML = [
    latLng.lat(),
    latLng.lng()
  ].join(', ');
}

function updateMarkerAddress(str) {
  document.getElementById('address').innerHTML = str;
}

var id =<%=@playground.id%>;
function initialize() {
  var latLng = new google.maps.LatLng(parseFloat('<%= @playground.latitude %>'), parseFloat('<%= @playground.longitude %>'));
  var map = new google.maps.Map(document.getElementById('mapCanvas'), {
    zoom: 17,
    center: latLng,
    mapTypeId: google.maps.MapTypeId.SATELLITE
  });
  var marker = new google.maps.Marker({
    position: latLng,
    title: 'Point A',
    map: map,
    draggable: true
  });
  
  openPlaygroundPopup(<%=@playground.to_json.html_safe%>, marker, map)

  // Update current position info.
  updateMarkerPosition(latLng);
  geocodePosition(latLng);
  
  // Add dragging event listeners.
  google.maps.event.addListener(marker, 'dragstart', function() {
    updateMarkerAddress('Dragging...');
  });
  
  google.maps.event.addListener(marker, 'drag', function() {
    updateMarkerStatus('Dragging...');
    updateMarkerPosition(marker.getPosition());
  });
  
  google.maps.event.addListener(marker, 'dragend', function() {
    updateMarkerStatus('Drag ended');
    
    geocodePosition(marker.getPosition());
    
    geocodePoint(marker.getPosition(), function(data) {
                   openPlaygroundPopup(data, marker, map);
                });
    //openPlaygroundPopup(<%=@playground.to_json.html_safe%>, marker, map)
  });
}
var visibleInfoWindow = null;
function closeInfwindow() {
    if (visibleInfoWindow) 
        visibleInfoWindow.close();
}

function openPlaygroundPopup(playground, playgroundMarker, map){
  var url = '/playgrounds/' + id + '/edit';

    $.ajax({
        url: url,
        type: 'GET',
        async: false,
        success: function(html) { 

            closeInfwindow();
            // Add on close behaviour to clear this marker
            // Set the content and open
            // $('body').append(html);
            // alert(playground.address);
            // $htm.find('#playground_address',playground.address);
            // alert($htm.get(0).outerHTML);
            visibleInfoWindow = new google.maps.InfoWindow({content: html});
            visibleInfoWindow.open(map, playgroundMarker);
             $('#playground_address').val(playground.address);
             $('#playground_latitude').val(playground.latitude);
             $('#playground_longitude').val(playground.longitude);
        }
    });
    
}

// function newPlaygroundPopup(playground, playgroundMarker, map){
//   debugger
//   var url = '/playgrounds/' + id + '/edit';

//     $.ajax({
//         url: url,
//         type: 'GET',
//         async: false,
//         success: function(html) { 

//             closeInfwindow();
//             // Add on close behaviour to clear this marker
//             // Set the content and open
//             visibleInfoWindow = new google.maps.InfoWindow({content: html});
//             visibleInfoWindow.open(map, playgroundMarker);
    
//         }
//     });
    
// }
// Onload handler to fire off the app.
google.maps.event.addDomListener(window, 'load', initialize);
</script>
</head>
<body>
  <style>
  #mapCanvas {
    width: 100%;
    height: 100%;
    float: left;
  }
  #infoPanel {
    float: left;
    margin-left: 10px;
  }
  #infoPanel div {
    margin-bottom: 5px;
  }
  </style>
  <div id="mapCanvas"></div>
  <div id="infoPanel" style="display: none">
    <b>Marker status:</b>
    <div id="markerStatus"><i>Click and drag the marker.</i></div>
    <b>Current position:</b>
    <div id="info"></div>
    <b>Closest matching address:</b>
    <div id="address"></div>
  </div>
  
  <%= javascript_include_tag "application" %>
</body>
</html>
